watcher:
  notifySubject: "%(hostname) %(domain) %(groupName) %(name) %(content): old alive = %(oldAlive) -> new alive = %(newAlive)" 
  notifyBody: "hostname: %(hostname)\ndomain: %(domain)\ngroupName: %(groupName)\nrecord: %(name) %(type) %(content)\n%(time) old alive = %(oldAlive) -> new alive = %(newAlive)\n\n-----\n%(detail)\n" 
  targetMap:
    "target1":
      protocol: "icmp"
      dest: "192.168.0.1"
      retry: 3
      retryWait: 1
      timeout: 1
      tlsSkipVerify: true
      watchInterval: 5
    "target2":
      protocol: "tcpRegexp"
      dest: "192.168.0.1:80"
      regexp: "hogehoge2"
      resSize: 2000
      retry: 3
      retryWait: 1
      timeout: 2
      tcptls: true
      tlsSkipVerify: true
      watchInterval: 5
    "target3":
      protocol: "httpRegexp"
      dest: "192.168.0.1:80"
      regexp: "hogehoge3"
      resSize: 3000
      httpMethod: "GET"
      httpStatusList: ["200"]
      retry: 3
      retryWait: 1
      timeout: 3
      tlsSkipVerify: true
      watchInterval: 5
  zoneMap:
    "example.jp":
      primaryNameServer: "foo.example.jp"
      email: "root.example.jp"
      nameServerList:
        - name: "foo"
          type: "A"
          ttl: 3600
          content: "192.168.0.254"
      staticRecordList:
        - name: "bar"
          type: "A"
          ttl: 3600
          content: "192.168.0.253"
      dynamicGroupMap:
        "group1":
          dynamicRecordList:
          - name: "foo"
            type: "a"
            ttl: 10 
            content: "192.168.0.1"
            watchInterval: 5
            alive: true
            notifyTrigger:
            - "changed"
            - "latestDown"
            targetNameList:
            - "target1"
            - "target2"
            - "target3"
            evalRule: "%(target1) && %(target2) && %(target3)"
          negativeRecordList:
          - name: "foo"
            type: "a"
            ttl: 10
            content: "192.168.0.254"
notifier:
  mail:
  - hostPort: "smtp.example.com:25"
    username: "bob"
    password: "password"
    to: "alice@example.com"
    from: "bob@example.com"
    authtype: "plain"
    useStartTls: true
    useTls: true
    tlsSkipVerify: true
apiServer:
  debug: true
  listenList:
  - addrPort: "0.0.0.0:28080"
    useTls: false
  apiKey: "api-key"
  staticPath: "/var/tmp"
apiClient:
  apiServerUrlList:
  - http://127.0.0.1:28080
  retry: 3
  retryWait: 1
  timeout: 30
  tlsSkipVerify: false
  apiKey: "api-key"
manager:
  debug: true
  listenList:
  - addrPort: "0.0.0.0:29000"
    useTls: false
  username: "admin"
  password: "pass"
  staticPath: "/var/tmp"
initializer:
  pdnsSqlitePath: /tmp/powerdns.db
updater:
  updateInterval: 5
  pdnsServer: http://127.0.0.1:38080
  pdnsApiKey: api-key
logger:
  loggers:
    default:
      filter:
        structName: LogLevelFilter
        structSetters:
        - setterName: SetLogLevel
          setterParams:
          - "8"
      formatter:
        structName: StandardFormatter
        structSetters:
        - setterName: SetAppendNewLine
          setterParams:
          - "true"
        - setterName: SetDateTimeLayout
          setterParams:
          - 2006-01-02 15:04:05 -0700 mst
        - setterName: SetLayout
          setterParams:
          - '%(dateTime) [%(logLevel)] (%(pid)) %(programCounter) %(loggerName) %(shortFileName)
            %(lineNum) %(message)'
      handlers:
      - structName: ConsoleHandler
        structSetters:
        - setterName: SetOutputType
          setterParams:
          - "1"
